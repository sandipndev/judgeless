name: Deploy
on: 
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build: 
    name: Build image
    runs-on: ubuntu-latest

    env:
      HASH: $(git rev-parse --short "$GITHUB_SHA")
      BRANCH: ${GITHUB_REF##*/}
      SERVICE_NAME: ${{ secrets.NAME_PREFIX }}
      PROJECT_ID: ${{ secrets.GCP_PROJECT }}

    steps:
      - uses: actions/checkout@v2

      - uses: google-github-actions/setup-gcloud@master

      - name: Setup Env
        run: |
          cat <<EOF > .env.local

          # Firebase WebApp
          NEXT_PUBLIC_FIREBASE_PUBLIC_API_KEY="${{ secrets.NEXT_PUBLIC_FIREBASE_PUBLIC_API_KEY }}"
          NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN="${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }}"
          NEXT_PUBLIC_FIREBASE_DATABASE_URL="${{ secrets.NEXT_PUBLIC_FIREBASE_DATABASE_URL }}"
          NEXT_PUBLIC_FIREBASE_PROJECT_ID="${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }}"

          # Firebase Admin
          FIREBASE_CLIENT_EMAIL=""
          # Private Key must be wrapped in quotes(") and parsed using JSON.parse
          # on the app itself. This is because of the way Vercel stores env variables.
          # Refer: https://github.com/vercel/vercel/issues/749#issuecomment-707515089
          FIREBASE_PRIVATE_KEY='""'

          # Secrets used to sign cookies
          COOKIE_SECRET_CURRENT=""
          COOKIE_SECRET_PREVIOUS=""

          # Cookie options
          NEXT_PUBLIC_COOKIE_SECURE=${{ secrets.NEXT_PUBLIC_COOKIE_SECURE }}

          # Database
          DATABASE_URL=""

          EOF

      - name: Build and Push
        uses: RafikFarhad/push-to-gcr-github-action@v4
        with:
          gcloud_service_key: ${{ secrets.INCEPTION_SA_CREDS }}
          registry: us.gcr.io
          project_id: ${{ secrets.GCP_PROJECT }}
          image_name: judgeless

  deploy:
    name: Deploy to GCP/GKE
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v2

      - name: Deploy
        run: |
          cd terraform/env/prod

          cat <<EOF > inception-sa-creds.json
          ${{ secrets.INCEPTION_SA_CREDS }}
          EOF

          export GOOGLE_CREDENTIALS=$(cat inception-sa-creds.json)

          cat <<EOF > bootstrap/terraform.tfvars
          gcp_project = "${{ secrets.GCP_PROJECT }}"
          name_prefix = "${{ secrets.NAME_PREFIX }}"
          EOF

          pushd bootstrap
          terraform init
          terraform refresh
          popd

          make prep-inception USERS=${{ secrets.USERS_ARRAY }} INCEPTION_EMAIL=${{ secrets.INCEPTION_EMAIL }}

          echo yes | make inception
          echo yes | make prep-platform
          echo yes | make platform
          echo yes | make services
